{"createdAt":"2024-10-27T19:56:03.908Z","updatedAt":"2025-04-11T02:55:41.570Z","id":"VzAVxevcV8lYoF23","name":"CXM Database","active":true,"isArchived":false,"nodes":[{"parameters":{"channel":"#cxm-db","otherOptions":{},"attachments":[{"text":"=CXM-StatusTrue Error: {{ $json.message }}","color":"#FF0000"}]},"name":"Slack - Error","type":"n8n-nodes-base.slack","position":[680,520],"typeVersion":1,"id":"be3544ef-69fd-4c1e-8068-72185f581b75","credentials":{"slackApi":{"id":"aje3CdDJ3MY9nXGX","name":"Slack account 2"}}},{"parameters":{"operation":"executeQuery","query":"select update_schema_table_permissions('USAGE','SELECT', 'a2_prod_read_only');\nselect update_schema_table_permissions('USAGE','SELECT, UPDATE, INSERT', 'a2_prod_read_write');\nselect update_schema_table_permissions('USAGE, CREATE','SELECT, UPDATE, INSERT, DELETE, TRUNCATE, REFERENCES, TRIGGER', 'a2_prod_full');","options":{}},"id":"90e80ce5-274e-4af3-b973-db235e7cbff9","name":"Execute Node","type":"n8n-nodes-base.postgres","typeVersion":2.3,"position":[20,680],"alwaysOutputData":false,"credentials":{"postgres":{"id":"Z5H8QSWEvUlZLdM7","name":"CXM Node"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"executeQuery","query":"select update_schema_table_permissions_core('SELECT', 'a2_prod_read_only');\nselect update_schema_table_permissions_core('SELECT, UPDATE, INSERT', 'a2_prod_read_write');\nselect update_schema_table_permissions_core('SELECT, UPDATE, INSERT, DELETE, TRUNCATE, REFERENCES, TRIGGER', 'a2_prod_full');","options":{}},"id":"2bc56831-9018-4888-8ff8-6169525d5232","name":"Execute Core","type":"n8n-nodes-base.postgres","typeVersion":2.3,"position":[20,860],"alwaysOutputData":false,"credentials":{"postgres":{"id":"0aMXowza2xk2XqXH","name":"CXM Core"}},"onError":"continueErrorOutput"},{"parameters":{"rule":{"interval":[{"field":"minutes","minutesInterval":30}]}},"id":"2e421837-d3d6-4ceb-90c4-ba71afc6e287","name":"Status True","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.1,"position":[-740,280]},{"parameters":{"rule":{"interval":[{}]}},"id":"09ef7483-3460-4f2e-bdb4-31905f6d53f8","name":"Update Core/Node","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.1,"position":[-180,760]},{"parameters":{"channel":"#cxm-db","text":"=","otherOptions":{},"attachments":[{"text":"=CXM-StatusTrue Succeeded: {{ $json.success }}","color":"#59FF00"}]},"name":"Slack - Succeeded","type":"n8n-nodes-base.slack","position":[680,340],"typeVersion":1,"id":"113a1c2a-590e-48ee-b080-5f62c02caaaa","credentials":{"slackApi":{"id":"aje3CdDJ3MY9nXGX","name":"Slack account 2"}}},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-740,-20],"id":"a9abcfea-7a4e-441e-a96a-0f109debf5c8","name":"When clicking ‘Test workflow’"},{"parameters":{"operation":"executeQuery","query":"DO $$\nDECLARE\n    schema_name text;\n    rows_updated int;\nBEGIN\n    FOR schema_name IN\n        SELECT s.schema_name\n        FROM information_schema.schemata s\n        WHERE s.schema_name NOT IN ('pg_catalog', 'information_schema') \n    LOOP\n        IF EXISTS (\n            SELECT 1\n            FROM information_schema.tables t\n            WHERE t.table_schema = schema_name\n              AND t.table_name = 'interactions'\n        ) THEN\n            EXECUTE format(\n                'UPDATE %I.interactions\n                 SET is_paid = true\n                 WHERE answered_at IS NOT NULL\n                   AND answered_at != 0\n                   AND is_paid = false;',\n                schema_name\n            );\n            \n            GET DIAGNOSTICS rows_updated = ROW_COUNT;\n            IF rows_updated > 0 THEN\n                RAISE NOTICE 'Query executada no schema: %, linhas atualizadas: %', schema_name, rows_updated;\n            ELSE\n                RAISE NOTICE 'Query executada no schema: %, nenhuma linha foi atualizada.', schema_name;\n            END IF;\n        END IF;\n    END LOOP;\nEND $$;","options":{"connectionTimeout":30}},"id":"4769ef76-102b-422c-8ba5-b6cc47cff419","name":"Medium","type":"n8n-nodes-base.postgres","typeVersion":2.3,"position":[380,-140],"alwaysOutputData":true,"retryOnFail":true,"executeOnce":false,"credentials":{"postgres":{"id":"1AK5j60fIaK0RFjl","name":"Stackgress - Medium"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"executeQuery","query":"DO $$\nDECLARE\n    schema_name text;\n    rows_updated int;\nBEGIN\n    FOR schema_name IN\n        SELECT s.schema_name\n        FROM information_schema.schemata s\n        WHERE s.schema_name NOT IN ('pg_catalog', 'information_schema') \n    LOOP\n        IF EXISTS (\n            SELECT 1\n            FROM information_schema.tables t\n            WHERE t.table_schema = schema_name\n              AND t.table_name = 'interactions'\n        ) THEN\n            EXECUTE format(\n                'UPDATE %I.interactions\n                 SET is_paid = true\n                 WHERE answered_at IS NOT NULL\n                   AND answered_at != 0\n                   AND is_paid = false;',\n                schema_name\n            );\n            \n            GET DIAGNOSTICS rows_updated = ROW_COUNT;\n            IF rows_updated > 0 THEN\n                RAISE NOTICE 'Query executada no schema: %, linhas atualizadas: %', schema_name, rows_updated;\n            ELSE\n                RAISE NOTICE 'Query executada no schema: %, nenhuma linha foi atualizada.', schema_name;\n            END IF;\n        END IF;\n    END LOOP;\nEND $$;","options":{"connectionTimeout":30}},"id":"7afa98dc-90fd-4881-841d-4a48cdf512ff","name":"Small","type":"n8n-nodes-base.postgres","typeVersion":2.3,"position":[380,40],"alwaysOutputData":true,"retryOnFail":true,"executeOnce":false,"credentials":{"postgres":{"id":"jrt6waad9TYHnE78","name":"Stackgress - Small"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"executeQuery","query":"DO $$\nDECLARE\n    schema_name text;\n    rows_updated int;\nBEGIN\n    FOR schema_name IN\n        SELECT s.schema_name\n        FROM information_schema.schemata s\n        WHERE s.schema_name NOT IN ('pg_catalog', 'information_schema') \n    LOOP\n        IF EXISTS (\n            SELECT 1\n            FROM information_schema.tables t\n            WHERE t.table_schema = schema_name\n              AND t.table_name = 'interactions'\n        ) THEN\n            EXECUTE format(\n                'UPDATE %I.interactions\n                 SET is_paid = true\n                 WHERE answered_at IS NOT NULL\n                   AND answered_at != 0\n                   AND is_paid = false;',\n                schema_name\n            );\n            \n            GET DIAGNOSTICS rows_updated = ROW_COUNT;\n            IF rows_updated > 0 THEN\n                RAISE NOTICE 'Query executada no schema: %, linhas atualizadas: %', schema_name, rows_updated;\n            ELSE\n                RAISE NOTICE 'Query executada no schema: %, nenhuma linha foi atualizada.', schema_name;\n            END IF;\n        END IF;\n    END LOOP;\nEND $$;","options":{"connectionTimeout":30}},"id":"72d1147b-22a9-4912-bc71-38acfac263ac","name":"Ultragas","type":"n8n-nodes-base.postgres","typeVersion":2.3,"position":[380,220],"alwaysOutputData":true,"retryOnFail":true,"executeOnce":false,"credentials":{"postgres":{"id":"p7jwEtGDWqKlcxDg","name":"Stackgress - Ultragaz"}},"onError":"continueErrorOutput"},{"parameters":{"operation":"executeQuery","query":"DO $$\nDECLARE\n    schema_name text;\n    rows_updated int;\nBEGIN\n    FOR schema_name IN\n        SELECT s.schema_name\n        FROM information_schema.schemata s\n        WHERE s.schema_name NOT IN ('pg_catalog', 'information_schema') \n    LOOP\n        IF EXISTS (\n            SELECT 1\n            FROM information_schema.tables t\n            WHERE t.table_schema = schema_name\n              AND t.table_name = 'interactions'\n        ) THEN\n            EXECUTE format(\n                'UPDATE %I.interactions\n                 SET is_paid = true\n                 WHERE answered_at IS NOT NULL\n                   AND answered_at != 0\n                   AND is_paid = false;',\n                schema_name\n            );\n            \n            GET DIAGNOSTICS rows_updated = ROW_COUNT;\n            IF rows_updated > 0 THEN\n                RAISE NOTICE 'Query executada no schema: %, linhas atualizadas: %', schema_name, rows_updated;\n            ELSE\n                RAISE NOTICE 'Query executada no schema: %, nenhuma linha foi atualizada.', schema_name;\n            END IF;\n        END IF;\n    END LOOP;\nEND $$;","options":{"connectionTimeout":30}},"id":"ac712ffb-a368-430f-ab82-ab126e0208c5","name":"RDS","type":"n8n-nodes-base.postgres","typeVersion":2.3,"position":[380,420],"alwaysOutputData":true,"retryOnFail":true,"executeOnce":false,"credentials":{"postgres":{"id":"Z5H8QSWEvUlZLdM7","name":"CXM Node"}},"onError":"continueErrorOutput"},{"parameters":{"authentication":"privateKey","command":"bash update_interactions.sh","cwd":"/home/ubuntu/update_interactions"},"type":"n8n-nodes-base.ssh","typeVersion":1,"position":[-380,280],"id":"9e6c4e6d-f635-4b68-9d63-a83e028938e3","name":"SSH","credentials":{"sshPrivateKey":{"id":"YoUKXALPqzvnzlxj","name":"EDP-Shell"}}}],"connections":{"Execute Node":{"main":[[],[]]},"Execute Core":{"main":[[],[]]},"Status True":{"main":[[{"node":"SSH","type":"main","index":0}]]},"Update Core/Node":{"main":[[{"node":"Execute Node","type":"main","index":0},{"node":"Execute Core","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"SSH","type":"main","index":0}]]},"Medium":{"main":[[{"node":"Slack - Succeeded","type":"main","index":0}],[{"node":"Slack - Error","type":"main","index":0}]]},"Small":{"main":[[{"node":"Slack - Succeeded","type":"main","index":0}],[{"node":"Slack - Error","type":"main","index":0}]]},"Ultragas":{"main":[[{"node":"Slack - Succeeded","type":"main","index":0}],[{"node":"Slack - Error","type":"main","index":0}]]},"RDS":{"main":[[{"node":"Slack - Succeeded","type":"main","index":0}],[{"node":"Slack - Error","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Status True":{"recurrenceRules":[]},"node:Update Core/Node":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"3111f21d-fd91-4612-8cab-5647e05f4e01","triggerCount":2,"tags":[{"createdAt":"2024-10-29T13:51:53.819Z","updatedAt":"2024-10-29T13:51:53.819Z","id":"S9bz1jGfMFuN7CJO","name":"cxm"}]}